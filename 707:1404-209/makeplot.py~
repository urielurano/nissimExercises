
from b import *
from math import *
import matplotlib.pyplot as plt
import numpy as np

fEpsilonPhCo = fEpsilonPhCo(z, dl, vPhCo, c, k, tPrimePh, gammaC, rPh)
epsilonPhCo = epsilonPhCo(k, tPrimePh, gammaC, z)

def fEpsilonCo():
    x1 = []
    y1 = []
    y2 = []

    for ii in range(3,6):
        epsilon = pow(10,ii)
        fig, ax = plt.subplots()
        x1.append(epsilon)
        if epsilon < epsilonPhCo:
            y1.append(fEpsilonPhCo*pow(epsilon/epsilonPhCo,2))
        if epsilon > epsilonPhCo:
            y2.append(fEpsilonPhCo*pow(epsilon/epsilonPhCo,-1))
    X = np.array(x1,float)
    Y1 = np.array(y1,float)
    Y2 = np.array(y2,float)
    rw1=plt.plot(X,Y1,color="green", linewidth=1.0, linestyle="-", label="E$_\pi$")
    rw2=plt.plot(X,Y2,color="blue", linewidth=1.0, linestyle="-", label="E$_k$")

    handles, labels = ax.get_legend_handles_labels()
    ax.legend(handles[::-1], labels[::-1], loc=3)

    a=plt.gca()
    a.set_yscale('log')
    a.set_xscale('log')
    plt.xlabel(r'$\epsilon_B$', size=12)
    plt.ylabel(r'E$_\nu$ (eV)', size=12)
    plt.title('')


        

fEpsilonCo()
